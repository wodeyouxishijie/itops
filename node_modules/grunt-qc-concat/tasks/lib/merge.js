module.exports = merge;

/**
 * 合并模板和模块文件
 * @param {String} src js模块源码
 * @param {String} tpl 模板模块源码
 * @param {String} [type=module] 合并机制(type=string|module)
 * @author jameszuo
 */
function merge(src, tpl, type) {
  if (type === 'string') {
    return mergeWithString(src, tpl);
  } else {
    return mergeWithFunction(src, tpl);
  }
}


/**
 * 旧的模版合并机制（将模版内容以字符串的形式替换到js模块中的引用）
 * @param {String} src js模块源码
 * @param {String} tpl 模板模块源码
 * @author skyzhou & evanyuan
 */
function mergeWithString(src, tpl) {
  var map = {},
      pat = /<template[^>]*name=['"]([\w.]*?)['"][^>]*>([\s\S]*?)<\/template>/ig,
      ret;
      while(ret = pat.exec(tpl)){
        map[ret[1]] = ret[2].replace(/\'/g,"\\'").replace(/[\r\n\t]/g,'').replace(/\r\n/g,'');
      }
    
    for(var p in map){
      src = src.replace(new RegExp(p.replace(/\./g,"\\."),'g'),function(match){
        return "'"+map[p]+"'";
      });
    }
  return src;
}


/**
 * 转换模版为模块（将模版内容创建独立的模块，并以require方式替换js模块中的引用）
 * @param {String} src js模块源码
 * @param {String} tpl 模板模块源码
 * @author jameszuo
 */
function mergeWithFunction(src, tpl) {

  var tplModSrc = [];

  // 处理script嵌套问题
  src = fixNesting(src);

  // 取得JS的模块名
  var m = src.match(/\s*define\s*\(\s*['"]([^'"]+)['"]\s*,\s*function\s*\(/);
  var modName = m && m[1];


  // 筛选出子模板代码
  var functions = {},
    pat = /<template[^>]*name=['"]([\w.]*?)['"][^>]*>([\s\S]*?)<\/template>/ig,
    ret;
  while (ret = pat.exec(tpl)) {
    var tplName = ret[1];
    var code = ret[2].replace(/(^\s*|\s*$)/g, '');
    // 转换子模板代码为function
    functions[tplName] = codeToFunction(code);
  }

  // 整个模板文件作为一个模块存在，每个子模板生成一个function
  tplModSrc.push("\r\n/* template file. */\r\ndefine ('", modName, "/tpl', function (require, exports, module) {\r\n\tmodule.exports = {\r\n");
  for (var tplName in functions) {
    var fn = functions[tplName];
    tplModSrc.push("\t\t'", tplName, "': ", fn.replace(/(\r?\n)/g, '\r\n\t\t\t'), ',\r\n');
  }
  tplModSrc.push('\t\t__escapeHtml:(function(){var a={"&":"&amp;","<":"&lt;",">":"&gt;","\'":"&#39;",\'"\':"&quot;","/":"&#x2F;"},b=/[&<>\'"\\/]/g;return function(c){return c?c.replace(b,function(b){return a[b]||b}):""}})()', ',');
  tplModSrc.length--;
  tplModSrc.push('\n\t}\n});');

  src += '\r\n\r\n' + tplModSrc.join('');

  // 兼容旧代码
  return src;
}


/**
 * 转换模板代码为function
 * @param {String} code 子模板源码
 * @author jameszuo
 */
function codeToFunction(code) {
  if (!code) {
    return "function(){return ''}";
  }

  var regCode = /(?:(?:\r\n|\r|\n)\s*?)?<%([\-=]?)([\w\W\r\n]*?)%>(?:\r\n|\r|\n)?/gmi,
    index = 0,
    exec,
    len,
    res = ['var __p=[],_p=function(s){__p.push(s)};\n'],
    jscode,
    eq;

  while (exec = regCode.exec(code)) {

    len = exec[0].length;

    if (index !== exec.index) {
      res.push("_p('")
      res.push(
        code
        .slice(index, exec.index)
        .replace(/\\/gmi, "\\\\")
        .replace(/'/gmi, "\\'")
        .replace(/\r\n|\r|\n/g, "\\r\\n\\\r\n")
      );
      res.push("');\r\n");
    }

    index = exec.index + len;

    eq = exec[1];
    jscode = exec[2];

    // escape html
    if (eq === '=') {
      res.push('_p(this.__escapeHtml(');
      res.push(jscode);
      res.push('));\r\n');
    }
    // no escape
    else if (eq === '-') {
      res.push('_p(');
      res.push(jscode);
      res.push(');\r\n');
    } else {
      res.push(jscode);
    }
  }

  res.push("_p('")
  res.push(
    code
    .slice(index)
    .replace(/\\/gmi, "\\\\")
    .replace(/'/gmi, "\\'")
    .replace(/\r\n|\r|\n/g, "\\r\\n\\\r\n")
  );
  res.push("');", '\r\n\r\n', 'return __p.join("");\r\n}', ',\r\n\r\n');
  res.length--;

  return ['function (data) {\r\n', res.join('')].join('');
}


// 处理script嵌套问题
function fixNesting(src) {
  var arr = [];
  return src.replace(/(<script\b)|(\/script>)/gmi, function(curr, start, end) {

    if (start) {
      if (arr.length) {
        arr.push(start);
        return '<scr<%%>ipt';
      } else {
        arr.push(start);
        return curr;
      }
    } else if (end) {

      if (arr.length === 1) {
        arr.length = arr.length - 1;
        return curr;
      } else if (arr.length > 1) {
        arr.length = arr.length - 1;
        return '\/scr<%%>ipt>';
      } else {
        return curr;
      }
    }
    return curr;
  });
}